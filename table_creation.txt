create table Department_Works_On_Project(Institute_Id int,Department_Name varchar(50),Project_Id int,foreign key(Institute_Id) references Institutes(Institute_Id),foreign key(Department_Name) references Institute_Departments(Department_Name),foreign key(Project_Id) references Project(Project_Id));


create table Person(
Person_Id int primary key
Name varchar(50),
Aadhar_Number int unique not null,
Job_Id int, 
Phone_Number varchar(50)
Date_of_Birth date,
Age int,
Gender varchar(10)
);


create table Project(
Project_Id int primary key,
Type varchar(20) check (Type = 'Paper', 'Software', 'Patent'),
Description varchar(200),
);

create table Fields(
Field_Id int primary key
Field varchar(50)
);

create table Project_Field(
Project_Id int,
Field_Id int,
foreign key (Project_Id) references Project (Project_Id),
foreign key (Field_Id) references Fields (Field_Id),
primary key(Project_id, Field_Id)
);

create table Educational_Institutes(
Educational_Institute_Id int primary key,
Name varchar(50) not null,
Type varchar(50) check (Type in ('School', 'University'))
);

create table Institutes(
Institute_Id int primary key,
Name varchar(50) not null,
Type varchar(50) check (Type in ('Company', 'University', 'Hospital')),
Project_Id int,
foreign key (Project_Id) references Project (Project_Id)
);

create table Courses(
Course_Id int primary key,
Course varchar(50)
);

create table Institute_Offers(
Educational_Institute_Id int,
Course_Id int,
foreign key (Educational_Institute_Id) references Educational_Institute (Educational_Institute_Id),
foreign key (Course_Id) references Courses (Course_Id),
);

create table Department(
Department_Id int primary key,
Department varchar(50),
);

create Contains_Department(
Educational_Institute_Id int,
Department_Id int,
foreign key (Educational_Institute_Id) references Educational_Institutes (Educational_Institute_Id),
foreign key (Department_Id) references Department (Department_Id),
primary key (Educational_Institute_Id, Department_Id)
);


create table Jobs(
Job_Id int primary key,
Job_Description varchar(200) not null,
Institute_Id int,
Salary int check (Salary > 0),
Start_Date date,
End_Date date,
Type varchar(50) check (Type in ('Software Developer', 'Project Manager', 'Researcher'),
Duration_Worked int,
foreign key (Institute_Id) references Institute (Institute_Id),
);

create table Educational_Qualifications(
Person_Id int,
Educational_Institute_Id int,
Description varchar(200),
CGPA float check (CGPA >= 0 and CGPA <= 10),
Qualifications varchar(50) check (Qualifications in ('PhD', 'Masters', 'Bachelors')),
foreign key (Person_Id) references Person (Person_Id),
foreign key (Educational_Institute_Id) references Educational_Institute (Educational_Institute_Id),
);







alter table, make job id a fk in Name


// in order
create database onlyjobs;
use onlyjobs;


show tables;

drop table person;

DESC person;
DESC Project;
DEsc fields;
desc project_field;
DESC Institutes;



# 1
create table Project(
Project_Id int primary key,
Type_ varchar(20) check (Type_ IN ('Paper', 'Software', 'Patent')),
Description varchar(200)
# Affiliation varchar(200)
);

#2
create table Fields(
Field_Id int primary key,
Field_ varchar(50)
);

#3
create table Project_Field(
Project_Id int,
Field_Id int,
foreign key (Project_Id) references Project (Project_Id),
foreign key (Field_Id) references Fields (Field_Id),
primary key(Project_id, Field_Id)
);

#4
create table Institutes(
Institute_Id int primary key,
Name varchar(50) not null,
Type varchar(50) check (Type in ('Company', 'University', 'Hospital')),
Project_Id int,
foreign key (Project_Id) references Project (Project_Id)
);

#5
create table Jobs(
Job_Id int primary key,
Job_Description varchar(200) not null,
Institute_Id int,
Salary int check (Salary > 0),
Start_Date date,
End_Date date,
Type varchar(50) check (Type IN ('Software Developer', 'Project Manager', 'Researcher')),
Duration_Worked int,
foreign key (Institute_Id) references Institutes (Institute_Id)
);

#6
create table Person(
Person_Id int primary key,
Name varchar(50),
Aadhar_Number int unique not null,
Job_Id int, 
Phone_Number varchar(50),
Date_of_Birth date,
Age int,
Gender varchar(10),

Foreign key(Job_Id) references Jobs(Job_Id)
);


#7
create table Educational_Institutes(
Educational_Institute_Id int primary key,
Name varchar(50) not null,
# Departments vachar(50),
Type varchar(50) check (Type in ('School', 'University'))
);

#8
create table Courses(
Course_Id int primary key,
Course varchar(50)
);

#9
create table Institute_Offers(
Educational_Institute_Id int,
Course_Id int,
foreign key (Educational_Institute_Id) references Educational_Institutes (Educational_Institute_Id),
foreign key (Course_Id) references Courses (Course_Id)
);

#10
create table Department(
Department_Id int primary key,
Department varchar(50)
);

#11
create table Contains_Department(
Educational_Institute_Id int,
Department_Id int,
foreign key (Educational_Institute_Id) references Educational_Institutes (Educational_Institute_Id),
foreign key (Department_Id) references Department (Department_Id),
primary key (Educational_Institute_Id, Department_Id)
);

#12
create table Educational_Qualifications(
Person_Id int,
Educational_Institute_Id int,
Description varchar(200),
CGPA float check (CGPA >= 0 and CGPA <= 10),
Qualifications varchar(50) check (Qualifications in ('PhD', 'Masters', 'Bachelors')),
foreign key (Person_Id) references Person (Person_Id),
foreign key (Educational_Institute_Id) references Educational_Institutes (Educational_Institute_Id)
);

#13
create table Institute_Departments(
    Institute_Id INT,
    Department_Id INT,
    Name varchar(50),
    Project_Id int,
    foreign key(Institute_Id) references Institutes(Institute_Id),
    foreign key (Project_Id) references Project(Project_Id) # ???
);

#14
create table Minimum_Job_Requirements(
    Job_Id int,
    Min_Years_of_Experience float,
    Min_Qualification varchar(50),

    foreign key(Job_Id) references Jobs(Job_Id) #  ?  refers to person id in schema
);

#15
create table Work_Experience(
    Person_Id INT,
    Job_Id INT,

    foreign key(Person_Id) references Person(Person_Id),
    foreign key(Job_Id) references Jobs(Job_Id)
);

#16
create table References_(
    Person_Id int,
    Institute_Id int, 
    Job_Id int,




   foreign key (Person_Id) references Person(Person_Id),
   foreign key(Job_Id) references Jobs(Job_Id),

   foreign key (Institute_Id) references Institutes(Institute_Id)
);

#17
create table Department_Works_On_Project(
    Institute_Id int,
    Department_Id int,
    Project_Id int,

    foreign key(Institute_Id) references Institutes(Institute_Id),
    foreign key(Department_Id) references Institute_Departments(Department_Id),
foreign key(Project_Id) references Project(Project_Id)
);

#18
create table Associated_With(
    Person_Id int,
    Institute_Id int,
    Job_Id INT,
    Project_Id int,

   foreign key (Person_Id) references Person(Person_Id),
   foreign key(Institute_Id) references Institutes(Institute_Id),
   foreign key(Institute_Id) references Institutes(Institute_Id),
   foreign key(Project_Id) references Project(Project_Id)

);


------------------------------------------------------------------------------------------------------------------------------------------------


Insert values

#1
insert into
    Project
values
    (
        1,
        'Research',
        'Creating a 3d model from a 2d image'
    ),
    (2, 'Research', 'Decision making'),
    (
        3,
        'Engineering',
        'Speech Detection - Detect from which region a person is'
    ),
    (4, 'Engineering', 'Enhance User Experience'),
    (
        5,
        'Research',
        'Computer Graphics - Making computer graphics look realistic'
    ),
    (
        6,
        'Development',
        'GTA 8 a very popular open world game'
    ),
    (7, 'Development', 'Red Dead Redemption 3'),
    (
        8,
        'Engineering',
        'Making a robot who has emotions'
    ),
    (
        9,
        'Machine Learning',
        'Remove from a model all the traces of a selected data point'
    ),
    (
        10,
        'Machine Learning',
        'Using Reinforcement Learning for choosing an Ansatz for Variational Algorithms'
    ),
    (
        11,
        'Machine Learning',
        'Transformer Conversational Chatbot in Python using TensorFlow 2.0'
    ),
    (12, 'Data Science', 'Fake news Detection');

#2
insert into
    Fields
values
    (1, 'Computer Vision'),
    (2, 'Game Theory'),
    (3, 'Natural Language Processing'),
    (4, 'User Experience Development'),
    (5, 'Game Development'),
    (6, 'Robotics'),
    (7, 'Machine Unlearning'),
    (8, 'Reinforcement Learning'),
    (9, 'Quantum Machine Learning'),
    (10, 'Data Science');

#3
insert into
    Project_Field
values
    (1, 1),
    (2, 2),
    (3, 3),
    (4, 4),
    (5, 1),
    (6, 5),
    (7, 5),
    (8, 6),
    (9, 7),
    (10, 8),
    (11, 9),
    (12, 10);























