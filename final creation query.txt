create database onlyjobs;
use onlyjobs;

SHOW TABLES

drop table Associated_With;
drop table References_;
drop table Work_Experience;
drop table Minimum_Job_Requirements;
drop table Institute_Departments;
drop table Educational_Qualifications;
drop table Contains_Department;
drop table Department;
drop table Institute_Offers;
#drop table Department_Works_on_Project;
drop table courses;
drop table educational_institutes;
drop table person;
drop table jobs;
drop table institutes;
drop table project_field;
drop table fields;
drop table project;

show tables


show tables;


DESC person;
DESC Project;
DEsc fields;
desc project_field;
DESC Institutes;




# 1
create table Project(
Project_Id int primary key,
Type_ varchar(50) check (Type_ IN ('Research', 'Development','Engineering','Machine Learning','Data Science')),
Description varchar(200)
# Affiliation varchar(200)
);

#2
create table Fields(
Field_Id int primary key,
Field_ varchar(50)
);

#3
create table Project_Field(
Project_Id int,
Field_Id int,
foreign key (Project_Id) references Project (Project_Id) ON DELETE CASCADE,
foreign key (Field_Id) references Fields (Field_Id)  ON DELETE CASCADE,
primary key(Project_id, Field_Id)
);

#4
create table Institutes(
Institute_Id int primary key,
Name varchar(50) not null,
Type varchar(50) check (Type in ('Company', 'University')),
Project_Id int,
foreign key (Project_Id) references Project (Project_Id)  ON DELETE CASCADE
);

#5
create table Jobs(
Job_Id int primary key,
Job_Description varchar(200) not null,
Institute_Id int,
Salary int check (Salary > 0),
Start_Date date,
End_Date date,
Type varchar(50) check (Type IN ('Software Developer', 'Project Manager', 'Researcher')),
Duration_Worked int,
foreign key (Institute_Id) references Institutes (Institute_Id)  ON DELETE CASCADE
);

#6
create table Person(
Person_Id int primary key,
Name varchar(50),
Aadhar_Number int unique not null, 
Phone_Number varchar(50),
Date_of_Birth date,
Age int,
Gender varchar(10)
);


#7
create table Educational_Institutes(
Educational_Institute_Id int primary key,
Name varchar(50) not null,
# Departments vachar(50),
Type varchar(50) check (Type in ('School', 'University'))
);

#8
create table Courses(
Course_Id int primary key,
Course varchar(50)
);

#9
create table Institute_Offers(
Educational_Institute_Id int,
Course_Id int,
foreign key (Educational_Institute_Id) references Educational_Institutes (Educational_Institute_Id)  ON DELETE CASCADE,
foreign key (Course_Id) references Courses (Course_Id)  ON DELETE CASCADE
);

#10
create table Department(
Department_Id int primary key,
Department varchar(50)
);

#11
create table Contains_Department(
Educational_Institute_Id int,
Department_Id int,
foreign key (Educational_Institute_Id) references Educational_Institutes (Educational_Institute_Id) ON DELETE CASCADE,
foreign key (Department_Id) references Department (Department_Id)  ON DELETE CASCADE,
primary key (Educational_Institute_Id, Department_Id)
);

#12
create table Educational_Qualifications(
Person_Id int,
Educational_Institute_Id int,
Description varchar(200),
CGPA float check (CGPA >= 0 and CGPA <= 10),
Qualifications varchar(50) check (Qualifications in ('PhD', 'Masters', 'Bachelors','Senior Secondary')),
foreign key (Person_Id) references Person (Person_Id) ON DELETE CASCADE,
foreign key (Educational_Institute_Id) references Educational_Institutes (Educational_Institute_Id) ON DELETE CASCADE
);

#13
create table Institute_Departments(
    Institute_Id INT,
    #Department_Id INT,
    Department_Name varchar(50),
    Project_Id int,
    primary key(Institute_Id,Department_Name),
    foreign key(Institute_Id) references Institutes(Institute_Id) ON DELETE CASCADE,
    foreign key (Project_Id) references Project(Project_Id) ON DELETE CASCADE
);

#14
create table Minimum_Job_Requirements(
    Job_Id int,
    Min_Years_of_Experience float,
    Min_Qualifications varchar(50) check (Min_Qualifications in ('PhD', 'Masters', 'Bachelors','Senior Secondary')),
    Min_CGPA float,

    foreign key(Job_Id) references Jobs(Job_Id) ON DELETE CASCADE #  ?  refers to person id in schema
);

#15
create table Work_Experience(
    Person_Id INT,
    Job_Id INT,
    Number_of_Years INT,

    foreign key(Person_Id) references Person(Person_Id) ON DELETE CASCADE,
    foreign key(Job_Id) references Jobs(Job_Id) ON DELETE CASCADE
);

#16
create table References_(
    Person_Id int,
    Institute_Id int, 
    Job_Id int,




   foreign key (Person_Id) references Person(Person_Id) ON DELETE CASCADE,
   foreign key(Job_Id) references Jobs(Job_Id) ON DELETE CASCADE,

   foreign key (Institute_Id) references Institutes(Institute_Id) ON DELETE CASCADE
);

#18
create table Associated_With(
    Person_Id int,
    Institute_Id int,
    Job_Id INT,
    Project_Id int,

   foreign key (Person_Id) references Person(Person_Id) ON DELETE CASCADE,
   foreign key(Institute_Id) references Institutes(Institute_Id) ON DELETE CASCADE,
   foreign key(Institute_Id) references Institutes(Institute_Id) ON DELETE CASCADE,
   foreign key(Project_Id) references Project(Project_Id) ON DELETE CASCADE
    
);


#17 nuked
--create table Department_Works_On_Project(
--    Institute_Id int,
--    Department_Name varchar(50),
--    Project_Id int,

--    foreign key(Institute_Id) references Institute(Institute_Id),
--    foreign key(Department_Name) references Institute_Departments(Department_Name),
--    foreign key(Project_Id) references Project(Project_Id));
